

from aiogram import Bot, Dispatcher, executor, types

from aiogram.types import ReplyKeyboardRemove, \
    ReplyKeyboardMarkup, KeyboardButton, \
    InlineKeyboardMarkup, InlineKeyboardButton



BOT_TOKEN = ""


bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot)



itembtn1 = types.KeyboardButton('F.A.Q')
itembtn2 = types.KeyboardButton('–ú–µ—Å—Ç–æ–Ω–∞—Ö–æ–∂–¥–µ–Ω–∏–µ')
itembtn3 = types.KeyboardButton('–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –∞–≤—Ç–æ—Ä–æ–≤')




keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True).add(itembtn1, itembtn2, itembtn3)
#keyboard = types.ReplyKeyboardMarkup.add(itembtn3)

inline_btn_1 = InlineKeyboardButton('–ß—Ç–æ —Ç–∞–∫–æ–µ Eco-Box?', callback_data='btn1')
inline_btn_2 = InlineKeyboardButton('–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç Eco-Box?', callback_data='btn2')
inline_btn_3 = InlineKeyboardButton('–ö–∞–∫–∞—è –≥–ª–∞–≤–Ω–∞—è –∑–∞–¥–∞—á–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞?', callback_data='btn3')
inline_btn_4 = InlineKeyboardButton('–ü–æ—á–µ–º—É –º–Ω–µ —Å—Ç–æ–∏—Ç –∫—É–ø–∏—Ç—å Eco-Box?', callback_data='btn4')
inline_btn_5 = InlineKeyboardButton('–ö–∞–∫–∞—è —Ü–µ–Ω–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞?', callback_data='btn5')
inline_btn_6 = InlineKeyboardButton('–ì–¥–µ –±—É–¥–µ—Ç —Å—Ç–æ—è—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä?', callback_data='btn6')

# inline_kb1 = InlineKeyboardMarkup().add(inline_btn_1)
# inline_kb2 = InlineKeyboardMarkup().add(inline_btn_2)
# inline_kb3 = InlineKeyboardMarkup().add(inline_btn_3)
# inline_kb4 = InlineKeyboardMarkup().add(inline_btn_4)



inline_kb_full = InlineKeyboardMarkup(row_width=1).add(inline_btn_1, inline_btn_2, inline_btn_3, inline_btn_4, inline_btn_5, inline_btn_6)


inline_kb_full.row()




@dp.callback_query_handler(lambda c: c.data and c.data.startswith('btn'))
async def process_callback_kb1btn1(callback_query: types.CallbackQuery):
    code = callback_query.data[-1]
    if code.isdigit():
        code = int(code)
    if code == 1:
        await bot.send_message(callback_query.from_user.id,'Eco-Box - —ç—Ç–æ —É–º–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –º—É—Å–æ—Ä–∞')
    elif code == 2:
        await  bot.send_message(callback_query.from_user.id,'–í–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –µ—Å—Ç—å –∫–∞–º–µ—Ä–∞, –∫–æ—Ç–æ—Ä–∞—è —Ä–∞—Å–ø–æ–∑–Ω–∞—ë—Ç –º—É—Å–æ—Ä.\n–î–∞–ª–µ–µ –∞–∫—Ç–∏–≤–∏—Ä—É—é—Ç—Å—è –º–æ—Ç–æ—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ —Å–¥–≤–∏–≥–∞—é—Ç –º—É—Å–æ—Ä –∫ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–π —è—á–µ–π–∫–µ.\n–ü–æ—Å–ª–µ –≤—Å–µ–≥–æ –≤—ã—à–µ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–æ–≥–æ –æ—Ç–∫—Ä—ã–≤–∞—é—Ç—Å—è —Å–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥—ã –∏–∑-–∑–∞ —á–µ–≥–æ –º—É—Å–æ—Ä –ø–∞–¥–∞–µ—Ç –≤ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–π –æ—Ç—Å–µ–∫. ')
    if code == 3:
        await bot.send_message(callback_query.from_user.id,'–ì–ª–∞–≤–Ω–æ–π –∑–∞–¥–∞—á–µ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —è–≤–ª—è–µ—Ç—Å—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –º—É—Å–æ—Ä–∞ –±–µ–∑ —É—á–∞—Å—Ç–∏—è –ª—é–¥–µ–π')
    elif code  == 4:
        await bot.send_message(callback_query.from_user.id,'–ü–æ—Ç–æ–º—É —á—Ç–æ –ø–æ–∫—É–ø–∞—è Eco-Box, –≤—ã –¥–µ–ª–∞–µ—Ç–µ –º–∏—Ä —á–∏—â–µ')
    if code == 5:
        await bot.send_message(callback_query.from_user.id,'–¶–µ–Ω–∞ –Ω–∞—à–µ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏–∏.\n–í–µ—Ä—Å–∏—è –Ω–∞ 3 –æ—Ç—Å–µ–∫–∞ —Å—Ç–æ–∏—Ç 500—Ç—ã—Å. —Ä—É–±, –Ω–∞ 5 –æ—Ç—Å–µ–∫–æ–≤ —Å—Ç–æ–∏—Ç 600—Ç—ã—Å. —Ä—É–±.')
    elif code == 6:
        await bot.send_message(callback_query.from_user.id,'–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ—Å—Ç–æ –¥–ª—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —ç—Ç–æ –º–µ—Å—Ç–∞ –±–æ–ª—å—à–æ–π –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏')
    # else:
    #     await bot.send_message(callback_query.from_user.id, f'–ù–∞–∂–∞—Ç–∞ –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∞! code={code}')


@dp.message_handler(text=['F.A.Q'])
async def process_command_2(message: types.Message):
    await message.answer("–í–æ—Ç –æ–¥–Ω–∏ –∏–∑ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–µ–º—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤:", reply_markup=inline_kb_full)



@dp.message_handler(commands=['start'])
async def start_cmd(message: types.Message):
    await bot.send_message(message.chat.id,"–ü—Ä–∏–≤–µ—Ç!üëã\n –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã –ø—Ä–æ–µ–∫—Ç—É Eco-Box.", reply_markup=keyboard)
# @bot.message.handler(commands=['start'])
# def danil(message: Message):
#    bot.send_message(message.chat.id,"HI" )

# @dp.message_handler()
# async def echo_message(msg: types.Message):
#    await bot.send_message(msg.from_user.id, msg.text)


@dp.message_handler(text=['–ú–µ—Å—Ç–æ–Ω–∞—Ö–æ–∂–¥–µ–Ω–∏–µ'])
async def message_chzv(message: types.Message):
    await  message.answer("–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.\n–ü—Ä–∏–Ω–æ—Å–∏–º —Å–≤–æ–∏ –∏–∑–≤–∏–Ω–µ–Ω–∏—è")

@dp.message_handler(text=['–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –∞–≤—Ç–æ—Ä–æ–≤'])
async def message_chzv(message: types.Message):
    await  message.answer("–î–µ–Ω—å–≥–∏ –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ –¥–∞–Ω–Ω—ã–π —Å—á–µ—Ç:\n+79600404465")


@dp.message_handler(content_types=types.ContentTypes.ANY)
async def all_other_message(message: types.Message):
    await message.answer("–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —Ç–µ–±—è")

if __name__ == '__main__':
    executor.start_polling(dp)

